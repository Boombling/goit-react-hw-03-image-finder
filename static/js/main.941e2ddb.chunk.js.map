{"version":3,"sources":["components/Searchbar/Searchbar.js","components/services/image-api.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","components/Modal/Modal.js","components/Loaders.js","components/ImageGallery/ImageGallery.js","App.js","index.js"],"names":["Searchbar","state","query","handelChange","e","setState","currentTarget","value","handelSubmit","preventDefault","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","fetchImage","searchQuery","currentPage","pageSize","axios","get","then","response","data","hits","ImageGalleryItem","onShowImage","largeImageURL","onClick","map","id","webformatURL","tags","src","alt","Button","onclick","allyProps","modalRoot","document","querySelector","Modal","handelLeyDown","code","onClose","handelBackdropClick","target","window","addEventListener","removeEventListener","createPortal","img","Loaders","color","height","width","timeout","ImageGallery","isLoading","error","showModal","largeImage","onChangeQuery","fetchImages","options","prevState","smoothTransition","catch","finally","toggleModal","showModalImage","scrollTo","top","documentElement","scrollHeight","behavior","prevProps","loadMoreButton","length","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"iXAuCeA,E,4MAnCXC,MAAQ,CACJC,MAAO,I,EAEXC,aAAe,SAAAC,GACX,EAAKC,SAAS,CAAEH,MAAOE,EAAEE,cAAcC,S,EAG3CC,aAAe,SAAAJ,GACXA,EAAEK,iBAEF,EAAKC,MAAMC,SAAS,EAAKV,MAAMC,OAC/B,EAAKG,SAAS,CAAEH,MAAO,M,4CAE3B,WACI,OACI,wBAAQU,UAAU,YAAlB,SACI,uBAAMA,UAAU,aAAaD,SAAUE,KAAKL,aAA5C,UACI,wBAAQM,KAAK,SAASF,UAAU,oBAAhC,SACI,sBAAMA,UAAU,0BAAhB,sBAGJ,uBACIA,UAAU,mBACVE,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZV,MAAOM,KAAKZ,MAAMC,MAClBgB,SAAUL,KAAKV,wB,GA7BfgB,a,iBCWTC,EAVI,SAAC,GAIb,IAAD,IAHFC,mBAGE,MAHY,GAGZ,MAFFC,mBAEE,MAFY,EAEZ,MADFC,gBACE,MADS,GACT,EACF,OAAOC,IACFC,IADE,uCAPK,qCAOL,cAC+CJ,EAD/C,iCACmFC,EADnF,qBAC2GC,IAC7GG,MAAK,SAACC,GAAD,OAAcA,EAASC,KAAKC,SCU3BC,G,kNAjBXC,YAAc,SAACC,GACf,EAAKtB,MAAMuB,QAAQD,I,4CAGnB,WAAU,IAAD,OACL,OAAOnB,KAAKH,MAAMmB,KAAKK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAML,EAA3B,EAA2BA,cAA3B,OACvB,oBAAIpB,UAAU,mBAAd,SAEI,qBACI0B,IAAKF,EACLG,IAAKF,EACLzB,UAAU,yBACVqB,QAAS,kBAAM,EAAKF,YAAYC,OAL/BG,U,GARUhB,c,8CCKhBqB,EANA,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAYC,EAAf,wBACX,qBAAK9B,UAAU,iBAAf,SACI,gDAAQE,KAAK,SAASF,UAAU,SAASqB,QAASQ,GAAaC,GAA/D,+BCDFC,G,MAAYC,SAASC,cAAc,gBA8B1BC,E,4MArBXC,cAAgB,SAAA3C,GACG,WAAXA,EAAE4C,MACF,EAAKtC,MAAMuC,W,EAGnBC,oBAAsB,SAAA9C,GACdA,EAAEE,gBAAkBF,EAAE+C,QACtB,EAAKzC,MAAMuC,W,uDAdnB,WACIG,OAAOC,iBAAiB,UAAWxC,KAAKkC,iB,kCAE5C,WACIK,OAAOE,oBAAoB,UAAWzC,KAAKkC,iB,oBAa/C,WACI,OAAOQ,uBACH,qBAAK3C,UAAU,UAAUqB,QAASpB,KAAKqC,oBAAvC,SACI,qBAAKtC,UAAU,QAAf,SACI,qBAAK0B,IAAKzB,KAAKH,MAAM8C,IAAKjB,IAAI,SAE9BI,O,GAxBAxB,a,iBCaLsC,G,kKAZb,WACE,OACE,cAAC,IAAD,CACE3C,KAAK,OACL4C,MAAM,UACNC,OAAQ,GACRC,MAAO,GACPC,QAAS,U,GATM1C,cC6FR2C,E,4MApFX7D,MAAQ,CACJ4B,KAAM,GACNP,YAAa,EACbD,YAAa,GACb0C,WAAW,EACXC,MAAO,KACPC,WAAW,EACXC,WAAY,I,EAQhBC,cAAgB,SAAAjE,GACZ,EAAKG,SAAS,CAAEgB,YAAanB,EAAOoB,YAAa,EAAGO,KAAM,GAAImC,MAAM,Q,EAGxEI,YAAc,WACV,MAAqC,EAAKnE,MAAlCqB,EAAR,EAAQA,YACF+C,EAAU,CAAEhD,YADlB,EAAqBA,YACUC,eAE/B,EAAKjB,SAAS,CAAE0D,WAAW,IAE3B3C,EAAWiD,GAAS3C,MAAK,SAACG,GACtB,EAAKxB,UAAS,SAACiE,GAAD,MAAgB,CAC1BzC,KAAK,GAAD,mBAAMyC,EAAUzC,MAAhB,YAAyBA,IAC7BP,YAAagD,EAAUhD,YAAc,MAEzC,EAAKiD,sBAEJC,OAAM,SAAAR,GAAK,OAAI,EAAK3D,SAAS,CAAE2D,aAC/BS,SAAQ,kBAAM,EAAKpE,SAAS,CAAE0D,WAAW,Q,EAIlDW,YAAc,WACd,EAAKrE,UAAS,kBAAkB,CAC9B4D,WADY,EAAEA,e,EAKhBU,eAAiB,SAAA3C,GACb,EAAK3B,SAAS,CACV6D,WAAYlC,EACZiC,WAAW,K,EAInBM,iBAAmB,WACfnB,OAAOwB,SAAS,CACZC,IAAKjC,SAASkC,gBAAgBC,aAC9BC,SAAU,Y,wDA5ClB,SAAmBC,EAAWX,GACtBA,EAAUjD,cAAgBR,KAAKZ,MAAMoB,aACrCR,KAAKuD,gB,oBA8Cb,WACI,MAA8CvD,KAAKZ,MAA3C4B,EAAR,EAAQA,KAAMkC,EAAd,EAAcA,UAAWC,EAAzB,EAAyBA,MAAOC,EAAhC,EAAgCA,UAC1BiB,EAAiBrD,EAAKsD,OAAS,IAAMpB,EAC3C,OACI,gCACKC,GAAS,qDAEV,cAAC,EAAD,CAAWrD,SAAUE,KAAKsD,gBAC1B,oBAAIvD,UAAU,eAAd,SACI,cAAC,EAAD,CACIiB,KAAMhB,KAAKZ,MAAM4B,KACjBI,QAASpB,KAAK8D,mBAGtB,sBAAK/D,UAAU,eAAf,UACCsE,GACG,cAAC,EAAD,CAAQjD,QAASpB,KAAKuD,cAEzBL,GAAa,cAAC,EAAD,OAEbE,GACG,cAAC,EAAD,CAAOhB,QAASpC,KAAK6D,YAAalB,IAAK3C,KAAKZ,MAAMiE,oB,GA/E3C/C,aCGZiE,G,kKATb,WACE,OACE,8BACE,cAAC,EAAD,U,GAJUjE,cCAlBkE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF3C,SAAS4C,eAAe,W","file":"static/js/main.941e2ddb.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Searchbar.css'\r\n\r\nclass Searchbar extends Component{\r\n    state = {\r\n        query: '',\r\n    }\r\n    handelChange = e => {\r\n        this.setState({ query: e.currentTarget.value });\r\n    }\r\n\r\n    handelSubmit = e => {\r\n        e.preventDefault();\r\n        \r\n        this.props.onSubmit(this.state.query);\r\n        this.setState({ query: ''})\r\n    }\r\n    render() {\r\n        return (\r\n            <header className=\"Searchbar\">\r\n                <form className=\"SearchForm\" onSubmit={this.handelSubmit}>\r\n                    <button type=\"submit\" className=\"SearchForm-button\">\r\n                        <span className=\"SearchForm-button-label\">Search</span>\r\n                    </button>\r\n\r\n                    <input\r\n                        className=\"SearchForm-input\"\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        placeholder=\"Search images and photos\"\r\n                        value={this.state.query}\r\n                        onChange={this.handelChange}\r\n                    />\r\n                </form>\r\n            </header>\r\n        )\r\n    }\r\n}\r\nexport default Searchbar","import axios from 'axios';\r\n\r\nconst API_KEY = '21270738-7f7a1d93c56d2e649f64c176e';\r\n\r\nconst fetchImage = ({\r\n    searchQuery = '',\r\n    currentPage = 1,\r\n    pageSize = 12\r\n}) => {\r\n    return axios\r\n        .get(`https://pixabay.com/api/?key=${API_KEY}&q=${searchQuery}&image_type=phot&page=${currentPage}&per_page=${pageSize}`)\r\n        .then((response) => response.data.hits);\r\n};\r\n\r\nexport default fetchImage ","import React, { Component } from 'react';\r\nimport './ImageGalleryItem.css';\r\n\r\nclass ImageGalleryItem extends Component {\r\n    onShowImage = (largeImageURL) => {\r\n    this.props.onClick(largeImageURL);\r\n    }\r\n\r\n    render() {\r\n        return this.props.hits.map(({ id, webformatURL, tags, largeImageURL }) => (\r\n            <li className=\"ImageGalleryItem\"\r\n                key={id}>\r\n                <img\r\n                    src={webformatURL}\r\n                    alt={tags}\r\n                    className=\"ImageGalleryItem-image\"\r\n                    onClick={() => this.onShowImage(largeImageURL)} />\r\n            </li>\r\n        )\r\n    )}\r\n}\r\nexport default ImageGalleryItem","import './Button.css';\r\n\r\nconst Button = ({ onclick, ...allyProps }) => (\r\n    <div className=\"buttonPosition\">\r\n        <button type='button' className='Button' onClick={onclick} {...allyProps}>Load more</button>\r\n    </div>\r\n)\r\n\r\nexport default Button","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport './Modal.css'\r\nconst modalRoot = document.querySelector('#modal-root');\r\nclass Modal extends Component {\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handelLeyDown)\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handelLeyDown)\r\n    }\r\n\r\n    handelLeyDown = e => {\r\n        if (e.code === 'Escape') {\r\n            this.props.onClose()\r\n        }\r\n    }\r\n    handelBackdropClick = e => {\r\n        if (e.currentTarget === e.target) {\r\n            this.props.onClose()\r\n        }\r\n    }\r\n    render() {\r\n        return createPortal(\r\n            <div className=\"Overlay\" onClick={this.handelBackdropClick}>\r\n                <div className=\"Modal\">\r\n                    <img src={this.props.img} alt='' />\r\n                </div>\r\n            </div>, modalRoot\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal","import React,{Component} from 'react';\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n class Loaders extends Component {\r\n  //other logic\r\n  render() {\r\n    return (\r\n      <Loader\r\n        type=\"Oval\"\r\n        color=\"#00BFFF\"\r\n        height={80}\r\n        width={80}\r\n        timeout={3000} //3 secs\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default Loaders","import React, {Component} from 'react';\r\nimport Searchbar from '../Searchbar/Searchbar';\r\nimport fetchImage from '../services/image-api';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport './ImageGallery.css';\r\nimport Button from '../Button/Button';\r\nimport Modal from '../Modal/Modal';\r\nimport Loaders from \"../Loaders\";\r\n\r\n\r\n\r\nclass ImageGallery extends Component {\r\n    state = {\r\n        hits: [],\r\n        currentPage: 1,\r\n        searchQuery: '',\r\n        isLoading: false,\r\n        error: null,\r\n        showModal: false,\r\n        largeImage: ''\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.searchQuery !== this.state.searchQuery) {\r\n            this.fetchImages();\r\n        }\r\n    }\r\n  \r\n    onChangeQuery = query => {\r\n        this.setState({ searchQuery: query, currentPage: 1, hits: [], error:null });\r\n    }\r\n\r\n    fetchImages = () => {\r\n        const { currentPage, searchQuery } = this.state;\r\n        const options = { searchQuery, currentPage };\r\n\r\n        this.setState({ isLoading: true });\r\n\r\n        fetchImage(options).then((hits) => {\r\n            this.setState((prevState) => ({\r\n                hits: [...prevState.hits, ...hits],\r\n                currentPage: prevState.currentPage + 1,  \r\n            }));\r\n            this.smoothTransition()\r\n        })\r\n            .catch(error => this.setState({ error }))\r\n            .finally(() => this.setState({ isLoading: false }))\r\n        \r\n    }\r\n\r\n    toggleModal = () => {\r\n    this.setState(({showModal}) => ({\r\n      showModal: !showModal\r\n    }))\r\n    }\r\n\r\n    showModalImage = largeImageURL => {\r\n        this.setState({\r\n            largeImage: largeImageURL,\r\n            showModal: true\r\n        })\r\n    }\r\n\r\n    smoothTransition = () => {\r\n        window.scrollTo({\r\n            top: document.documentElement.scrollHeight,\r\n            behavior: 'smooth',\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { hits, isLoading, error, showModal } = this.state;\r\n        const loadMoreButton = hits.length > 0 && !isLoading;\r\n        return (\r\n            <div>\r\n                {error && <h1>Search is incorrect</h1>}\r\n\r\n                <Searchbar onSubmit={this.onChangeQuery}/>\r\n                <ul className=\"ImageGallery\">\r\n                    <ImageGalleryItem\r\n                        hits={this.state.hits}\r\n                        onClick={this.showModalImage}\r\n                        />\r\n                </ul>\r\n                <div className=\"ButtonLoader\">\r\n                {loadMoreButton && (\r\n                    <Button onClick={this.fetchImages} />\r\n                    )}\r\n                {isLoading && <Loaders/>}\r\n                </div>\r\n                {showModal &&\r\n                    <Modal onClose={this.toggleModal} img={this.state.largeImage} />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ImageGallery","import React, { Component } from 'react';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport './App.css'\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <ImageGallery/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}